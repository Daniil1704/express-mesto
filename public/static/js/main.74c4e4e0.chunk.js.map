{"version":3,"sources":["components/Header.js","usercontext/CurrentUserContex.js","components/Card.js","components/Main.js","components/Footer.js","components/PopupWithForm.js","components/ImagePopup.js","components/EditProfilePopup.js","components/EditAvatarPopup.js","components/AddPlacePopup.js","utils/Api.js","utils/utils.js","components/App.js","serviceWorker.js","index.js","images/avatar.png","images/logo.svg"],"names":["Header","className","style","backgroundImage","logo","CurrentUserContext","React","createContext","Card","props","card","onCardClick","onCardLike","onCardDelete","currentUser","useContext","isMyOwner","owner","_id","cardDeleteButton","isLiked","likes","some","i","console","log","cardLikeButton","onClick","type","alt","src","link","name","length","Main","onEditProfile","onAddPlace","onEditAvatar","cards","avatar","about","map","key","Footer","PopupWithForm","title","buttonText","isOpen","onClose","onSubmit","isLoading","children","ImagePopup","EditProfilePopup","onUpdateUser","useState","setName","description","setDescription","useEffect","e","preventDefault","defaultValue","id","minLength","maxLength","pattern","placeholder","onChange","target","value","required","EditAvatarPopup","onUpdateAvatar","inputAvatar","useRef","current","ref","AddPlacePopup","inputName","inputLink","api","data","this","apiUrl","headers","path","parameter","fetch","then","res","ok","json","Promise","reject","status","_sendRequest","newUserInfo","method","body","JSON","stringify","authorization","App","setCurrenUser","setIsLoading","isEditProfilePopupOpen","setEditProfilePopupOpen","isAddPlacePopupOpen","setAddPlacePopupOpen","isEditAvatarPopupOpen","setEditAvatarPopupOpen","isImageOpen","selectedCard","setSelectedCard","getUserInfo","catch","err","setCards","closeAllPopups","getCards","Provider","cardData","changeLikeCardStatus","newCard","newCards","c","deleteCard","filter","sendUserInfo","finally","addCard","sendUserAvatar","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","registration","unregister","error","message","module","exports"],"mappings":"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","file":"static/js/main.74c4e4e0.chunk.js","sourcesContent":["import React from 'react';\r\nimport logo from '../images/logo.svg';\r\n\r\nfunction Header() {\r\n\r\n\r\n    return (\r\n        <header className=\"header\">\r\n            <div className=\"header__logo\" style={{ backgroundImage: `url(${logo})` }}></div>\r\n        </header>\r\n    );\r\n}\r\n\r\nexport default Header;","import React from 'react';\r\n\r\nexport const CurrentUserContext = React.createContext();","import React from 'react';\r\nimport { CurrentUserContext } from '../usercontext/CurrentUserContex.js';\r\nimport '../images/avatar.png';\r\n\r\nfunction Card(props) {\r\n\r\n    const {\r\n        card,\r\n        onCardClick,\r\n        onCardLike,\r\n        onCardDelete\r\n    } = props\r\n\r\n    const currentUser = React.useContext(CurrentUserContext);\r\n    const isMyOwner = card.owner._id === currentUser._id;\r\n\r\n    const cardDeleteButton = (`card__rubbish ${isMyOwner ? 'card__rubbish_active' : ''}`);\r\n\r\n    const isLiked = card.likes.some(i => i._id === currentUser._id);\r\n    console.log(isLiked);\r\n    const cardLikeButton = (\r\n        `card__button-like ${isLiked ? 'card__button-like_active' : ''}`\r\n    );\r\n\r\n    function handleImageClick() {\r\n        onCardClick(card);\r\n    }\r\n\r\n    function handleLikeClick() {\r\n        onCardLike(card);\r\n    }\r\n\r\n    function handleDeleteClick() {\r\n        onCardDelete(card);\r\n    }\r\n    return (\r\n        <div className=\"card\">\r\n            <button className={`${cardDeleteButton}`} onClick={handleDeleteClick} type=\"button\"></button>\r\n            <img className=\"card__image\" alt=\"изображение\" src={card.link} onClick={handleImageClick} />\r\n\r\n            <div className=\"card__photo-name\">\r\n                <p className=\"card__photo-title\">{card.name}</p>\r\n                <div className=\"card__like\">\r\n                    <button onClick={handleLikeClick} type=\"button\" className={`${cardLikeButton}`} ></button>\r\n                    <span className=\"card__span-like\">{card.likes.length}</span>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Card;","import React from 'react';\r\nimport avatar from '../images/avatar.png';\r\nimport Card from './Card.js'\r\nimport { CurrentUserContext } from '../usercontext/CurrentUserContex.js';\r\nfunction Main(props) {\r\n\r\n    const {\r\n        onEditProfile,\r\n        onAddPlace,\r\n        onEditAvatar,\r\n        onCardClick,\r\n        cards,\r\n        onCardLike,\r\n        onCardDelete\r\n    } = props\r\n\r\n    const currentUser = React.useContext(CurrentUserContext);\r\n\r\n    return (\r\n        <main className=\"main \">\r\n            <section className=\"profile\">\r\n                <div className=\"profile__avatar\">\r\n                    <img className=\"profile__avatar-img\" src={currentUser.avatar || avatar} alt=\"аватар\" />\r\n                    <button onClick={onEditAvatar} className=\"profile__pencil-edit\"></button>\r\n                </div>\r\n                <div className=\"profile__description\">\r\n                    <div className=\"profile__name\">\r\n                        <h1 className=\"profile__author\">{currentUser.name}</h1>\r\n                        <p className=\"profile__about\">{currentUser.about}</p>\r\n                    </div>\r\n                    <button onClick={onEditProfile} type=\"button\" className=\"profile__button-edit\"></button>\r\n                </div>\r\n                <button onClick={onAddPlace} type=\"button\" className=\"profile__button-add\"></button>\r\n            </section>\r\n            <section className=\"cards\">\r\n                {cards.map((card) => (\r\n                    <Card\r\n                        key={card._id} //\r\n                        card={card}\r\n                        onCardClick={onCardClick}\r\n                        onCardLike={onCardLike}\r\n                        onCardDelete={onCardDelete}\r\n                    >\r\n                    </Card>\r\n                ))}\r\n            </section>\r\n        </main>\r\n    );\r\n}\r\n\r\nexport default Main;","import React from 'react';\r\n\r\nfunction Footer() {\r\n\r\n    return (\r\n        <footer className=\"footer\">\r\n            <p className=\"footer__author\">© 2020 Цырульников Даниил</p>\r\n        </footer>\r\n    )\r\n}\r\n\r\nexport default Footer;","import React from 'react';\r\n\r\nfunction PopupWithForm(props) {\r\n    const {\r\n        title,\r\n        buttonText,\r\n        isOpen,\r\n        onClose,\r\n        onSubmit,\r\n        isLoading\r\n    } = props;\r\n    return (\r\n        <div className={`popup  ${isOpen && 'popup_opened'}`}>\r\n            <form onSubmit={onSubmit} className={`popup__container `}>\r\n                <button onClick={onClose} type=\"button\" className=\"popup__close\"></button>\r\n                <h2 className=\"popup__title\">{title}</h2>\r\n                {props.children}\r\n                <button type=\"submit\" className=\"popup__save popup__button-loading\">{isLoading ? `Сохранение...` : buttonText}</button>\r\n            </form>\r\n        </div>\r\n    );\r\n}\r\nexport default PopupWithForm;","\r\nimport React from 'react';\r\n\r\nfunction ImagePopup(props) {\r\n\r\n    const {\r\n        isOpen,\r\n        onClose,\r\n        name,\r\n        link,\r\n\r\n    } = props\r\n\r\n    return (\r\n        <div className={`popup popup-picture ${isOpen && 'popup_opened'}`}>\r\n            <div className=\"popup-picture__case\">\r\n                <button onClick={onClose} type=\"button\" className=\"popup__close\"></button>\r\n                <img className=\"popup-picture__image\" alt={name} src={link} />\r\n                <p className=\"popup-picture__title\">{name}</p>\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default ImagePopup;","import React, { useState } from 'react';\r\nimport PopupWithForm from './PopupWithForm.js';\r\nimport { CurrentUserContext } from '../usercontext/CurrentUserContex.js';\r\n\r\nfunction EditProfilePopup(props) {\r\n\r\n    const {\r\n        isOpen,\r\n        onClose,\r\n        onUpdateUser,\r\n        isLoading\r\n    } = props\r\n\r\n    const currentUser = React.useContext(CurrentUserContext);\r\n\r\n    const [name, setName] = useState('');\r\n    const [description, setDescription] = useState('');\r\n\r\n    function handleNameUpdate(e) {\r\n        setName(e.target.value);\r\n    }\r\n\r\n    function handleDescription(e) {\r\n        setDescription(e.target.value);\r\n    }\r\n\r\n    function handleSubmit(e) {\r\n        e.preventDefault();\r\n        onUpdateUser({\r\n            name: name,\r\n            about: description,\r\n        });\r\n    }\r\n\r\n    React.useEffect(() => {\r\n        setName(currentUser.name);\r\n        setDescription(currentUser.about);\r\n    }, [currentUser]);\r\n\r\n\r\n    return (\r\n        <PopupWithForm\r\n            name=\"profile\"\r\n            title=\"Редактировать профиль\"\r\n            buttonText=\"Сохранить\"\r\n            isOpen={isOpen}\r\n            onClose={onClose}\r\n            onSubmit={handleSubmit}\r\n            isLoading={isLoading}\r\n        >\r\n\r\n            <input\r\n                defaultValue={name}\r\n                className=\"popup__input popup__input_author\"\r\n                id=\"author-input\"\r\n                type=\"text\"\r\n\r\n                minLength={2}\r\n                maxLength={40}\r\n                pattern=\"[A-Za-zА-ЯЁа-яё -]{1,}\"\r\n                placeholder=\"Имя\"\r\n                onChange={handleNameUpdate}\r\n                required\r\n            />\r\n            <span className=\"popup__span-error\" ></span>\r\n            <input\r\n                defaultValue={description}\r\n                className=\"popup__input popup__input_about\"\r\n                id=\"about-input\"\r\n                type=\"text\"\r\n                minLength={2}\r\n                maxLength={40}\r\n                placeholder=\"О себе\"\r\n                onChange={handleDescription}\r\n                required\r\n            />\r\n            <span className=\"popup__span-error\" ></span>\r\n        </PopupWithForm>\r\n    )\r\n}\r\n\r\nexport default EditProfilePopup;","import React from 'react'\r\nimport PopupWithForm from './PopupWithForm.js'\r\n\r\nfunction EditAvatarPopup(props) {\r\n\r\n    const {\r\n        isOpen,\r\n        onClose,\r\n        onUpdateAvatar,\r\n        isLoading\r\n    } = props\r\n\r\n    const inputAvatar = React.useRef('');\r\n\r\n    React.useEffect(() => {\r\n        inputAvatar.current.value = '';\r\n    }, [isOpen]);\r\n\r\n    function handleSubmit(e) {\r\n        e.preventDefault();\r\n        onUpdateAvatar({\r\n            avatar: inputAvatar.current.value\r\n        })\r\n    }\r\n\r\n    return (\r\n      <PopupWithForm\r\n        name=\"avatar\"\r\n        title=\"Обновить аватар\"\r\n        buttonText=\"Сохранить\"\r\n        isOpen={isOpen}\r\n        onClose={onClose}\r\n        onSubmit={handleSubmit}\r\n        isLoading={isLoading}\r\n      >\r\n     \r\n     <input name=\"avatar\" className=\"popup__input popup__input_name\" type=\"url\" placeholder=\"Ссылка на картинку\" defaultValue=\"\" required ref={inputAvatar}/>\r\n     \r\n     <span className=\"popup__span-error\"></span>\r\n      \r\n      </PopupWithForm>\r\n    )\r\n}\r\n\r\nexport default EditAvatarPopup;","import React from 'react'\r\nimport PopupWithForm from './PopupWithForm.js'\r\n\r\nfunction AddPlacePopup(props) {\r\n\r\n    const {\r\n        isOpen,\r\n        onClose,\r\n        onAddPlace,\r\n        isLoading\r\n    } = props;\r\n\r\n    //рефы: имя карточки, ссылка карточки.\r\n    const inputName = React.useRef('');\r\n    const inputLink = React.useRef('');\r\n\r\n    //сбрасываем значения инпутов при открытии попапа\r\n    React.useEffect(() => {\r\n        inputName.current.value = '';\r\n        inputLink.current.value = '';\r\n    }, [isOpen]);\r\n\r\n    //функция отвечает за отправку данных карточки\r\n    function handleSubmit(e) {\r\n        e.preventDefault();\r\n        onAddPlace({\r\n            name: inputName.current.value,\r\n            link: inputLink.current.value\r\n        });\r\n    }\r\n\r\n    return (\r\n        <PopupWithForm\r\n            name=\"card\"\r\n            title=\"Новое место\"\r\n            buttonText=\"Сохранить\"\r\n            isOpen={isOpen}\r\n            onClose={onClose}\r\n            onSubmit={handleSubmit}\r\n            isLoading={isLoading}\r\n        >\r\n\r\n            <input name=\"name\" className=\"popup__input popup__input_name \" id=\"name-input\" type=\"text\" placeholder=\"Название\"\r\n                minLength=\"1\" maxLength=\"30\" required ref={inputName} />\r\n            <span className=\"popup__span-error\" ></span>\r\n            <input name=\"link\" className=\"popup__input popup__input_link \" id=\"link-input\" type=\"url\"\r\n                placeholder=\"Ссылка на картинку\" required ref={inputLink} />\r\n            <span className=\"popup__span-error\" ></span>\r\n\r\n        </PopupWithForm>\r\n    )\r\n}\r\n\r\nexport default AddPlacePopup;","import { Option } from './utils.js';\r\n\r\nexport class Api {\r\n    constructor(data) {\r\n        this.apiUrl = data.apiUrl;\r\n        this.headers = data.headers;\r\n    }\r\n\r\n\r\n    _sendRequest(path, parameter) {\r\n        return fetch(`${this.apiUrl}${path}`, parameter)\r\n            .then((res) => {\r\n                if (res.ok) {\r\n                    return res.json();\r\n                }\r\n                else if (!res.ok) {\r\n                    return Promise.reject(res.status);\r\n                }\r\n            })\r\n    }\r\n\r\n    getUserInfo() {\r\n        return this._sendRequest(`/users/me`, {\r\n            headers: this.headers\r\n        })\r\n    }\r\n\r\n    sendUserInfo(newUserInfo) {\r\n        return this._sendRequest(`/users/me`, {\r\n            method: 'PATCH',\r\n            headers: this.headers,\r\n            body: JSON.stringify({\r\n                name: newUserInfo.name,\r\n                about: newUserInfo.about\r\n            })\r\n        })\r\n    }\r\n\r\n    sendUserAvatar(avatar) {\r\n        return this._sendRequest(`/users/me/avatar`, {\r\n            method: 'PATCH',\r\n            body: JSON.stringify({ avatar: avatar.avatar }),\r\n            headers: this.headers\r\n        })\r\n    }\r\n\r\n    getCards() {\r\n        return this._sendRequest(`/cards`, {\r\n            method: 'GET',\r\n            headers: this.headers\r\n        })\r\n    }\r\n\r\n    addCard(card) {\r\n        return this._sendRequest(`/cards`, {\r\n            method: 'POST',\r\n            body: JSON.stringify({\r\n                name: card.name,\r\n                link: card.link\r\n            }),\r\n            headers: this.headers\r\n        })\r\n    }\r\n\r\n    changeLikeCardStatus(id, status) {\r\n        return this._sendRequest(`/cards/likes/${id}`, {\r\n            method: `${(status) ? `PUT` : `DELETE`}`,\r\n            headers: this.headers\r\n        })\r\n    }\r\n\r\n   \r\n\r\n    deleteCard(id) {\r\n        return this._sendRequest(`/cards/${id}`, {\r\n            method: 'DELETE',\r\n            headers: this.headers\r\n        })\r\n    }\r\n}\r\n\r\nexport const api = new Api(Option);","export const Option = {\r\n    apiUrl: 'https://mesto.nomoreparties.co/v1/cohort-13',\r\n    headers: {\r\n        authorization: 'a0f4146b-8e3d-4aaf-af4c-7ce0e92aa69d',\r\n        'Content-Type': 'application/json'\r\n    }\r\n}","import React, { useState } from 'react';\nimport '../index.css';\nimport Header from './Header.js';\nimport Main from './Main.js';\nimport Footer from './Footer.js'\nimport PopupWithForm from './PopupWithForm.js';\nimport ImagePopup from './ImagePopup.js';\nimport { CurrentUserContext } from '../usercontext/CurrentUserContex.js';\nimport EditProfilePopup from './EditProfilePopup.js'\nimport EditAvatarPopup from './EditAvatarPopup.js'\nimport AddPlacePopup from './AddPlacePopup.js';\nimport { api } from '../utils/Api.js'\n\nfunction App() {\n  const [currentUser, setCurrenUser] = useState({});\n  const [isLoading, setIsLoading] = useState(false);\n  const [isEditProfilePopupOpen, setEditProfilePopupOpen] = useState(false);\n  const [isAddPlacePopupOpen, setAddPlacePopupOpen] = useState(false);\n  const [isEditAvatarPopupOpen, setEditAvatarPopupOpen] = useState(false);\n  const [selectedCard, setSelectedCard] = useState({\n    isImageOpen: false,\n    name: '',\n    link: ''\n  });\n\n  React.useEffect(() => {\n    api.getUserInfo()\n      .then((data) => {\n        setCurrenUser(data);\n      })\n      .catch((err) => {\n        console.log(`Произошла ошибка: ${err}`);\n      });\n  }, []);\n\n  function handleUpdateUser(data) {\n    setIsLoading(true);\n    api.sendUserInfo(data)\n      .then((data) => {\n        setCurrenUser(data);\n      })\n      .catch((err) => {\n        console.log(`Произошла ошибка: ${err}`);\n      })\n      .finally(() => {\n        setIsLoading(false);\n        closeAllPopups();\n      })\n  }\n\n  function handleUpdateAvatar(data) {\n    setIsLoading(true);\n    api.sendUserAvatar(data)\n      .then((data) => {\n        setCurrenUser(data);\n      })\n      .catch((err) => {\n        console.log(`Произошла ошибка: ${err}`);\n      })\n      .finally(() => {\n        setIsLoading(false);\n        closeAllPopups();\n      })\n  }\n  // ____________________Картоки____________________\n  const [cards, setCards] = useState([]);\n\n  React.useEffect(() => {\n    api.getCards()\n      .then((data) => {\n        setCards(data);\n      })\n      .catch((err) => {\n        console.log(`Произошла ошибка: ${err}`);\n      });\n  }, []);\n\n  function handleAddPlaceSubmit(data) {\n    setIsLoading(true)\n    api.addCard(data)\n      .then((data) => {\n        setCards([...cards, data]);\n      })\n      .catch((err) => {\n        console.log(`Произошла ошибка: ${err}`);\n      })\n      .finally(() => {\n        setIsLoading(false);\n        closeAllPopups();\n      })\n  }\n\n  function handleCardDelete(card) {\n    const isMyOwner = card.owner._id === currentUser._id;\n\n    api.deleteCard(card._id, !isMyOwner)\n      .then((newCard) => {\n        const newCards = cards.filter((c) => c._id === card._id ? !newCard : c);\n        setCards(newCards);\n      })\n      .catch((err) => {\n        console.log(`Произошла ошибка: ${err}`);\n      });\n  }\n  // ____________________Лайки____________________\n\n  function handleCardLike(card) {\n    const isLiked = card.likes.some(i => i._id === currentUser._id);\n\n    api.changeLikeCardStatus(card._id, !isLiked)\n      .then((newCard) => {\n        const newCards = cards.map((c) => c._id === card._id ? newCard : c);\n        setCards(newCards);\n      })\n      .catch((err) => {\n        console.log(`Произошла ошибка: ${err}`);\n      });\n  }\n\n\n  function handleEditAvatarClick() {\n    setEditAvatarPopupOpen(true);\n  }\n\n  function handleEditProfileClick() {\n    setEditProfilePopupOpen(true);\n  }\n\n  function handleCardClick(cardData) {\n    const { link, name } = cardData;\n    setSelectedCard({ isImageOpen: true, link: link, name: name });\n  }\n\n  function handleAddPlaceClick() {\n    setAddPlacePopupOpen(true);\n  }\n\n\n  function closeAllPopups() {\n    setEditAvatarPopupOpen(false);\n    setEditProfilePopupOpen(false);\n    setAddPlacePopupOpen(false);\n    setSelectedCard((setSelectedCard) => {\n      return { ...setSelectedCard, isImageOpen: false }\n    });\n  }\n\n  return (\n    <CurrentUserContext.Provider value={currentUser}>\n      <div className=\"page\">\n        <Header />\n\n        <Main\n          onEditProfile={handleEditProfileClick}\n          onAddPlace={handleAddPlaceClick}\n          onEditAvatar={handleEditAvatarClick}\n          onCardClick={handleCardClick}\n          onCardLike={handleCardLike}\n          onCardDelete={handleCardDelete}\n          cards={cards}\n        >\n        </Main>\n\n        <Footer />\n\n        <section className=\"popups\">\n          <EditProfilePopup\n            isOpen={isEditProfilePopupOpen}\n            onClose={closeAllPopups}\n            onUpdateUser={handleUpdateUser}\n            isLoading={isLoading}\n          >\n          </EditProfilePopup>\n\n          <AddPlacePopup\n            isOpen={isAddPlacePopupOpen}\n            onClose={closeAllPopups}\n            onAddPlace={handleAddPlaceSubmit}\n            isLoading={isLoading}\n          >\n          </AddPlacePopup>\n\n          <EditAvatarPopup\n            onUpdateAvatar={handleUpdateAvatar}\n            isLoading={isLoading}\n            isOpen={isEditAvatarPopupOpen}\n            onClose={closeAllPopups}\n          >\n          </EditAvatarPopup>\n\n          <ImagePopup\n            isOpen={selectedCard.isImageOpen}\n            onClose={closeAllPopups}\n            name={selectedCard.name}\n            link={selectedCard.link}\n          >\n          </ImagePopup>\n\n          <PopupWithForm\n            name='card-delete'\n            title='Вы уверены?'\n            buttonText='Да'\n          >\n          </PopupWithForm>\n        </section>\n      </div>\n    </CurrentUserContext.Provider>\n  );\n}\n\nexport default App;","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './components/App';\r\nimport * as serviceWorker from './serviceWorker';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();","module.exports = __webpack_public_path__ + \"static/media/avatar.d46cac0f.png\";","module.exports = __webpack_public_path__ + \"static/media/logo.855a8c98.svg\";"],"sourceRoot":""}